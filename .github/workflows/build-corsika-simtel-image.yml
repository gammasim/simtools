---
name: build-corsika-simtel-image
# Build and push CORSIKA / sim_telarray base images for different CPU architectures.

on:
  workflow_dispatch:
  pull_request:
    paths:
      - docker/Dockerfile-corsika-simtel
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at 00:00 UTC (build only)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CLOUD_URL: "https://syncandshare.desy.de/index.php/s/"

jobs:
  download-corsika:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        simtel_version: ['240205', '240927', '250304']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download corsika-simtel-package
        run: |
          wget --no-verbose ${{ env.CLOUD_URL }}/${{ secrets[format('CLOUD_SIMTEL_{0}', matrix.simtel_version)] }}/download -O corsika_simtelarray_${{ matrix.simtel_version }}.tar.gz
          wget --no-verbose ${{ env.CLOUD_URL }}/${{ secrets.CLOUD_AUTOCONF }}/download -O autoconf.tar.gz
      - name: Upload corsika-simtel-package
        uses: actions/upload-artifact@v4
        with:
          name: corsika-simtelarray-package-${{ matrix.simtel_version }}
          path: |
            corsika_simtelarray_${{ matrix.simtel_version }}.tar.gz
            autoconf.tar.gz
          retention-days: 3

  build-base-images:
    runs-on: ubuntu-latest
    needs: download-corsika
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version:
          # list of avx instructions: 'avx2', 'avx512f', 'sse4', 'avx'
          - {simtel_version: '240205', corsika_version: '77500', bernlohr_version: '1.67', hadronic_model: 'qgs2', avx_instruction: 'no_opt'}
          - {simtel_version: '240927', corsika_version: '77550', bernlohr_version: '1.68', hadronic_model: 'qgs2', avx_instruction: 'no_opt'}
          - {simtel_version: '240927', corsika_version: '77550', bernlohr_version: '1.68', hadronic_model: 'qgs2', avx_instruction: 'avx2'}
          - {simtel_version: '240927', corsika_version: '77550', bernlohr_version: '1.68', hadronic_model: 'qgs2', avx_instruction: 'avx512f'}
          - {simtel_version: '240927', corsika_version: '77550', bernlohr_version: '1.68', hadronic_model: 'qgs2', avx_instruction: 'sse4'}
          - {simtel_version: '250304', corsika_version: '78000', bernlohr_version: '1.69', hadronic_model: 'qgs3', avx_instruction: 'no_opt'}
          - {simtel_version: '250304', corsika_version: '78000', bernlohr_version: '1.69', hadronic_model: 'qgs3', avx_instruction: 'avx2'}
        production:
          # list of productions build options: 'prod6-sc', 'prod6-baseline', 'prod5', 'prod5-sc'
          - {build_opt: 'prod6-sc', extra_def: ''}
          - {build_opt: 'prod6-baseline', extra_def: ''}

    env:
      BASE_LABELS: "corsika-simtel-${{ matrix.version.simtel_version }}-corsika-${{ matrix.version.corsika_version }}-bernlohr-${{ matrix.version.bernlohr_version }}-${{ matrix.production.build_opt }}-${{ matrix.version.hadronic_model }}-${{ matrix.version.avx_instruction }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download corsika-simtel-package
        uses: actions/download-artifact@v5
        with:
          name: corsika-simtelarray-package-${{ matrix.version.simtel_version }}
          path: ./downloaded-artifacts

      - name: Rename corsika-simtel-package files
        run: |
          mv ./downloaded-artifacts/corsika_simtelarray_${{ matrix.version.simtel_version }}.tar.gz corsika_simtelarray.tar.gz
          mv ./downloaded-artifacts/autoconf.tar.gz autoconf.tar.gz

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for CORSIKA/sim_telarray base image (tags, labels)
        id: meta-base
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}
          images: ${{ env.REGISTRY }}/gammasim/${{ env.BASE_LABELS }}
          flavor: latest=true

      - name: Build and push CORSIKA/sim_telarray base image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          build-args: |
            BUILD_OPT=${{ matrix.production.build_opt }}
            EXTRA_DEF=${{ matrix.production.extra_def }}
            HADRONIC_MODEL=${{ matrix.version.hadronic_model }}
            AVX_FLAG=${{ matrix.version.avx_instruction }}
            CORSIKA_VERSION=${{ matrix.version.corsika_version }}
            BERNLOHR_VERSION=${{ matrix.version.bernlohr_version }}
          secrets: |
            gitlab_token=${{ secrets.CORSIKA_OPT_PATCHES_GITLAB }}
          # push: ${{ github.event_name == 'release' || github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
          push: True
          file: ./docker/Dockerfile-corsika-simtel
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}

      - name: Output image information
        run: |
          echo "Built base image: ${{ env.REGISTRY }}/gammasim/${{ env.BASE_LABELS }}:latest"
          echo "Image tags: ${{ steps.meta-base.outputs.tags }}"
