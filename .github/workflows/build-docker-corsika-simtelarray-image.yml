---
name: docker-corsika-simtelarray
# Build and push vanilla CORSIKA / sim_telarray image and simtools-prod images for different CPU architectures.

on:
  workflow_dispatch:
  pull_request:
    paths:
      - './docker/Dockerfile-simtelarray'
      - './docker/Dockerfile-prod-opt'
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at 00:00 UTC (build only)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CLOUD_URL: "https://syncandshare.desy.de/index.php/s/"

jobs:
  download-corsika:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        simtel_version: ['240205', '240927']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download corsika-simtel-package
        run: |
          wget --no-verbose ${{ env.CLOUD_URL }}/${{ secrets[format('CLOUD_SIMTEL_{0}', matrix.simtel_version)] }}/download -O corsika_simtelarray_${{ matrix.simtel_version }}.tar.gz
          wget --no-verbose ${{ env.CLOUD_URL }}/${{ secrets.CLOUD_CORSIKA_OPT }}/download -O corsikaOptPatch.tar.gz  # might depend on CORSIKA version

      - name: Upload corsika-simtel-package
        uses: actions/upload-artifact@v4
        with:
          name: corsika-simtelarray-package-${{ matrix.simtel_version }}
          path: |
            corsika_simtelarray_${{ matrix.simtel_version }}.tar.gz
            corsikaOptPatch.tar.gz
          retention-days: 1

  build-corsika-simtelarray:
    runs-on: ubuntu-latest
    needs: download-corsika
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        production:
          - {build_opt: 'prod6-sc', extra_def: '-DMAXIMUM_TELESCOPES=128'}
          - {build_opt: 'prod6-baseline', extra_def: ''}
          - {build_opt: 'prod5', extra_def: ''}
          - {build_opt: 'prod5-sc', extra_def: ''}
        version:
          # - {simtel_version: '240205', corsika_version: '77500', bernlohr_version: '1.67'}
          - {simtel_version: '240927', corsika_version: '77550', bernlohr_version: '1.68'}
        hadronic_model: ['qgs2']

    env:
      LABELS: '${{ matrix.version.simtel_version }}-corsika-${{ matrix.version.corsika_version }}-bernlohr-${{ matrix.version.bernlohr_version }}-${{ matrix.production.build_opt }}-${{ matrix.hadronic_model }}'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download corsika-simtel-package
        uses: actions/download-artifact@v4
        with:
          name: corsika-simtelarray-package-${{ matrix.version.simtel_version }}
          path: ./downloaded-artifacts

      - name: Rename corsika simtel package file
        run: |
          mv ./downloaded-artifacts/corsika_simtelarray_${{ matrix.version.simtel_version }}.tar.gz corsika_simtelarray.tar.gz

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}
          images: ${{ env.REGISTRY }}/gammasim/simtools-corsika-sim-telarray-${{ env.LABELS }}
          flavor: latest=true

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          no-cache: true
          context: .
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
           BUILD_OPT=${{ matrix.production.build_opt }}
           EXTRA_DEF=${{ matrix.production.extra_def }}
           HADRONIC_MODEL=${{ matrix.hadronic_model }}
           SIMTEL_VERSION=${{ matrix.version.simtel_version }}
           CORSIKA_VERSION=${{ matrix.version.corsika_version }}
           BERNLOHR_VERSION=${{ matrix.version.bernlohr_version }}
          push:
            ${{ github.event_name == 'release' || github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
          file: ./docker/Dockerfile-simtelarray
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}-corsika-sim-telarray-${{ env.LABELS }}

  build-production-images-optimized:
    runs-on: ubuntu-latest
    needs: download-corsika
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version:
          - {simtel_version: '240205', corsika_version: '77500', bernlohr_version: '1.67'}
          # - {simtel_version: '240927', corsika_version: '77550', bernlohr_version: '1.68'}
        hadronic_model: ['qgs2']
        production:
          - {build_opt: 'prod6-sc', extra_def: '-DMAXIMUM_TELESCOPES=128'}
          - {build_opt: 'prod6-baseline', extra_def: ''}
          # - {build_opt: 'prod5', extra_def: ''}
          # - {build_opt: 'prod5-sc', extra_def: ''}
        avx_instruction: ['avx2', 'noOpt']
        # avx_instruction: ['avx2', 'avx512f', 'sse4', 'avx']

    env:
      LABELS: "${{ matrix.version.simtel_version }}-corsika-${{ matrix.version.corsika_version }}-bernlohr-${{ matrix.version.bernlohr_version }}-${{ matrix.production.build_opt }}-${{ matrix.hadronic_model }}-${{ matrix.avx_instruction }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download corsika-simtel-package
        uses: actions/download-artifact@v4
        with:
          name: corsika-simtelarray-package-${{ matrix.version.simtel_version }}
          path: ./downloaded-artifacts

      - name: Rename corsika-simtel-package files and set build branch
        run: |
          mv ./downloaded-artifacts/corsika_simtelarray_${{ matrix.version.simtel_version }}.tar.gz corsika_simtelarray.tar.gz
          mv ./downloaded-artifacts/corsikaOptPatch.tar.gz corsikaOptPatch.tar.gz
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            echo "BUILD_BRANCH=${GITHUB_HEAD_REF}" >> "$GITHUB_ENV"
          else
            echo "BUILD_BRANCH=${GITHUB_REF#refs/heads/}" >> "$GITHUB_ENV"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}
          images: ${{ env.REGISTRY }}/gammasim/simtools-prod-opt-${{ env.LABELS }}
          flavor: latest=true

      - name: Build and push optimized image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          build-args: |
            BUILD_OPT=${{ matrix.production.build_opt }}
            EXTRA_DEF=${{ matrix.production.extra_def }}
            HADRONIC_MODEL=${{ matrix.hadronic_model }}
            AVX_FLAG=${{ matrix.avx_instruction }}
            CORSIKA_VERSION=${{ matrix.version.corsika_version }}
            BERNLOHR_VERSION=${{ matrix.version.bernlohr_version }}
            BUILD_BRANCH=${{ env.BUILD_BRANCH }}
          push:
            ${{ github.event_name == 'release' || github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
          file: ./docker/Dockerfile-prod-opt
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}-prod-opt
