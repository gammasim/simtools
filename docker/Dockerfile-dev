# Dockerfile for simtools development.
#
# Based on the CORSIKA and sim_telarray image (no vector optimization).
# All dependencies for simtools are installed, but not simtools itself.
# It is expected that simtools is installed in an external directory
# mounted in the container.
#
# hadolint global ignore=DL3007,DL3013,DL3041,SC1091
# - DL3007, DL3041: ignore warnings about using latest
# - DL3013: ignore warnings about installing non-specific versions with microdnf)
# - SC1091: ignore warning about not being able to source the bashrc
ARG BUILD_OPT="prod6-baseline"
ARG HADRONIC_MODEL="qgs3"
ARG SIMTEL_VERSION="250304"
ARG CORSIKA_VERSION="78000"
ARG BERNLOHR_VERSION="1.69"
ARG AVX_INSTRUCTION="no_opt"
ARG PYTHON_VERSION="3.12"
FROM ghcr.io/gammasim/corsika-simtel-${SIMTEL_VERSION}-corsika-${CORSIKA_VERSION}-bernlohr-${BERNLOHR_VERSION}-${BUILD_OPT}-${HADRONIC_MODEL}-${AVX_INSTRUCTION}:latest
WORKDIR /workdir
ARG PYTHON_VERSION

RUN microdnf update -y && microdnf install -y \
    findutils gcc-c++ git wget \
    python${PYTHON_VERSION} python${PYTHON_VERSION}-pip python${PYTHON_VERSION}-devel && \
    microdnf clean all

# Create python symlink pointing to the specified Python version
RUN ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python

RUN wget --quiet https://raw.githubusercontent.com/gammasim/simtools/main/pyproject.toml && \
    python${PYTHON_VERSION} -m venv env && \
    . env/bin/activate && \
    pip install --no-cache-dir -U pip setuptools wheel && \
    pip install --no-cache-dir toml-to-requirements pybind11 && \
    toml-to-req --toml-file pyproject.toml --optional-lists dev,doc,tests && \
    pip uninstall -y toml-to-requirements && \
    pip install --no-cache-dir -r requirements.txt

# Add native LightEmission build utilities
COPY docker/build_native_lightemission.sh /usr/local/bin/
COPY src/simtools/build_native_extension.py /usr/local/bin/
RUN chmod +x /usr/local/bin/build_native_lightemission.sh

# Set up environment variables for native builds
ENV SIMTEL_PATH="/workdir/sim_telarray/"
ENV SIMTOOLS_BUILD_LE=1
ENV PATH="/workdir/simtools/env/bin/:$PATH"

# Attempt to build native extension automatically when simtools is installed
# This will be executed when the user installs simtools in the container
RUN echo 'export SIMTOOLS_BUILD_LE=1' >> ~/.bashrc && \
    echo 'export SIMTEL_PATH="/workdir/sim_telarray/"' >> ~/.bashrc
SHELL ["/bin/bash", "-c"]

WORKDIR /workdir/external
