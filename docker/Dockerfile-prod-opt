FROM almalinux:9.5 AS build_image
WORKDIR /workdir/sim_telarray
ENV GCC_PATH="/usr/bin/"
ARG BUILD_OPT="prod6-sc"
ARG EXTRA_DEF="-DMAXIMUM_TELESCOPES=128"
ARG HADRONIC_MODEL="qgs2"
ARG AVX_FLAG="avx2"
ARG CORSIKA_VERSION="77550"
ARG BERNLOHR_VERSION="1.68"
ARG BUILD_BRANCH=main

RUN yum update -y && yum install -y \
    gcc-fortran gsl-devel libgfortran \
    autoconf automake csh patch perl which && \
    yum clean all

ADD corsika_simtelarray.tar.gz .
ADD corsikaOptPatch.tar.gz ./corsika-$CORSIKA_VERSION
RUN tar -zxf corsika-$CORSIKA_VERSION.tar.gz && \
    tar -zxf bernlohr-$BERNLOHR_VERSION.tar.gz -C corsika-$CORSIKA_VERSION/bernlohr && \
    rm -f examples-with-data.tar.gz sim_telarray_config.tar.gz \
    corsika_simtelarray.tar.gz  corsika-$CORSIKA_VERSION.tar.gz \
    bernlohr-$BERNLOHR_VERSION.tar.gz

# apply patches and build (optimized) corsika
RUN cd corsika-$CORSIKA_VERSION && \
    if [[ $CORSIKA_VERSION -eq 77550 ]]; then \
        (cd src && patch -b -p0 corsika.F < "../../corsika-77550.patch"); \
    fi && \
    ./corsika_opt_patching.sh && \
    autoreconf  && \
    ../corsika_build_script $HADRONIC_MODEL generic cerenkopt vlibm

RUN make -C corsika-$CORSIKA_VERSION clean && rm -f */*.a lib/*/*.a && \
    AVX_EXTRA_FLAG=$([ "$AVX_FLAG" = "avx512f" ] && echo "-ffp-contract=off" || echo "") && \
    echo "AVX_FLAG=${AVX_FLAG}"; \
    make -C corsika-$CORSIKA_VERSION \
        CC="${GCC_PATH}/gcc -static" \
        CXX="${GCC_PATH}/g++ -static" \
        CPP="${GCC_PATH}/gcc -static -E" \
        F77="${GCC_PATH}/gfortran -L/lib64/" \
        CFLAGS="-g -DCERENKOPT -DVLIBM -std=c99 -O3 ${AVX_FLAG:+-m$AVX_FLAG} ${avx_512_FLAG} -DVECTOR_SIZE=8 -DVECTOR_LENGTH=8" \
        CXXFLAGS="-g -DCERENKOPT -DVLIBM -std=c99 -O3 ${AVX_FLAG:+-m$AVX_FLAG} ${avx_512_FLAG} -DVECTOR_SIZE=8 -DVECTOR_LENGTH=8" \
        FFLAGS="-g -ffixed-line-length-132 -fno-automatic -frecord-marker=4 -std=legacy -DCERENKOPT -DVLIBM -std=c99 -O3 ${AVX_FLAG:+-m$AVX_FLAG} ${avx_512_FLAG} -DVECTOR_SIZE=8 -DVECTOR_LENGTH=8" \
        install

# Rename executable to 'corsika'
RUN mv -f corsika-$CORSIKA_VERSION/run/corsika$CORSIKA_VERSIONLinux_*ceropt corsika-$CORSIKA_VERSION/run/corsika
# build sim_telarray
RUN export NO_CORSIKA=1 EXTRA_DEFINES="${EXTRA_DEF}" && ./build_all $BUILD_OPT $HADRONIC_MODEL gsl

# corsika source code is removed to follow
# the corsika non-distribution policy.
RUN mv ./corsika-77*/run corsika-run && \
    rm -rf ./corsika-7[0-9]* && \
    find . -name "*.tar.gz" -delete && \
    find . -name "doc*" -type d -exec rm -rf {} + 2>/dev/null && \
    find . -name "*.o" -delete && \
    rm -rf /var/cache/yum/* /tmp/* /var/tmp/*

FROM almalinux:9.5-minimal
WORKDIR /workdir
ARG BUILD_BRANCH=main
COPY --from=build_image /workdir/sim_telarray/ /workdir/sim_telarray/

RUN microdnf update -y && microdnf install -y \
    bc findutils gcc-c++ git gsl-devel gcc-fortran libgfortran \
    procps python3.11-pip zstd && \
    microdnf clean all

RUN BUILD_BRANCH=$(echo $BUILD_BRANCH | sed 's#refs/tags/##') && \
    git clone -b $BUILD_BRANCH https://github.com/gammasim/simtools.git --depth 1 && \
    python3.11 -m venv env && \
    source env/bin/activate && \
    pip install -U pip && \
    pip install --no-cache-dir ./simtools && \
    rm -rf simtools

ENV SIMTEL_PATH="/workdir/sim_telarray/"
ENV PATH="/workdir/env/bin/:$PATH"
SHELL ["/bin/bash", "-c"]
